diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 73fcd9906a4c..99fab3197f98 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -5921,13 +5921,15 @@ long sched_setaffinity(pid_t pid, const struct cpumask *in_mask)
 		struct cpumask fake_mask;
 		if (!fake_cpumask(p, &fake_mask))
 			goto orig;
-		rcu_read_lock();
-		if (!ns_capable(__task_cred(p)->user_ns, CAP_SYS_NICE)) {
+		if (!check_same_owner(p)) {
+			rcu_read_lock();
+			if (!ns_capable(__task_cred(p)->user_ns, CAP_SYS_NICE)) {
+				rcu_read_unlock();
+				retval = -EPERM;
+				goto out_put_task;
+			}
 			rcu_read_unlock();
-			retval = -EPERM;
-			goto out_put_task;
 		}
-		rcu_read_unlock();
 		if (!cpumask_subset(in_mask, &fake_mask)) {
 			retval = -EINVAL;
 			goto out_put_task;
diff --git a/kernel/vpsadminos.c b/kernel/vpsadminos.c
index 895221b90512..852d179463b7 100644
--- a/kernel/vpsadminos.c
+++ b/kernel/vpsadminos.c
@@ -9,6 +9,25 @@
 #include <linux/xarray.h>
 #include <asm/page.h>
 #include "sched/sched.h"
+#include <linux/vpsadminos-livepatch.h>
+#include "kpatch-macros.h"
+char old_uname[65];
+char new_uname[65];
+
+static int patch(patch_object *obj)
+{
+	scnprintf(new_uname, 64, "%s.%s", LIVEPATCH_ORIG_KERNEL_VERSION,
+	    LIVEPATCH_NAME);
+	scnprintf(old_uname, 64, "%s", init_uts_ns.name.release);
+	scnprintf(init_uts_ns.name.release, 64, "%s", new_uname);
+	return 0;
+}
+KPATCH_PRE_PATCH_CALLBACK(patch);
+static void unpatch(patch_object *obj)
+{
+	scnprintf(init_uts_ns.name.release, 64, "%s", old_uname);
+}
+KPATCH_POST_UNPATCH_CALLBACK(unpatch);
 
 int online_cpus_in_cpu_cgroup(struct task_struct *p)
 {
